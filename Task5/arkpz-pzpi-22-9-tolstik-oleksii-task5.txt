Міністерство освіти і науки України
Харківський національний університет радіоелектроніки


Кафедра програмної інженерії



Звіт
з лабораторної роботи №5
з дисципліни «Аналіз та рефакторинг коду»
з теми: «Розгортання програмної системи та демонстрація її роботи»





Виконав 								Перевірив
ст. гр. ПЗПІ-22-9 							Дашенков Д. С.
Толстік О. В.









2024
РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА ДЕМОНСТРАЦІЯ ЇЇ РОБОТИ
1 Мета роботи

Розгорнути програмну систему та продемонструвати її роботу.

2 Хід роботи

1. Розгорнути реалізовану програмну систему.
2. Перевірити та налаштувати роботу розгорнутої програмної системи.
Для розгортання програмної системи було обрано платформу Heroku, яка забезпечує зручне управління та підтримку веб-додатків. Процес розгортання включав наступні етапи:
1) Підготовка середовища розробки.
Було створено репозиторій на платформі GitHub, де розміщено вихідний код програмної системи. Для інтеграції з Heroku налаштовано систему управління версіями Git.
2) Розгортання серверної частини.
На платформі Heroku створено новий додаток через веб-інтерфейс. Використано Heroku CLI для локальної автентифікації та з'єднання з додатком. Вибрано стек, що підтримує технології, використані у програмній системі (Node.js).
3) Налаштування бази даних.
Для зберігання даних використано Heroku Add-ons. Було обрано Heroku Postgres, який забезпечує просте підключення бази даних до додатку. Виконано міграцію бази даних з локального середовища на сервер Heroku. Експортовано структуру та дані з локальної бази та імпортовано їх у Heroku Postgres. Оновлено налаштування програмної системи для підключення до нового хоста бази даних.

4) Деплой додатку.
Виконано деплой додатку за допомогою команд git push heroku main. Перевірено стан запущеного додатку через Heroku Dashboard.
5) Тестування розгорнутої системи.
Проведено тестування програмної системи, щоб переконатися у коректній роботі на сервері. Перевірено доступність API та інтеграцію з базою даних за допомогою Postman.
Таким чином, розгорнута програмна система тепер доступна за унікальним URL-адресом, наданим Heroku, що забезпечує зручний доступ для користувачів.

3. Продемонструвати описану у розділі 2.2 Vision & Scope функціональність програмної системи.
Для демонстрації функціональності використаємо Postman.
MF-1. Реєстрація та аутентифікація.
- API для реєстрації:
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/register/patient
Приклад вхідних даних:
{
    "email": "ivanov@gmail.com",
    "password": "Qwerty123.",
    "last_name": "Іванов",
    "first_name": "Іван",
    "patronymic": "Іванович",
    "birth_date": "11.11.1987",
    "address": "Харків, вул. Квітуча, 44"
}


 
Рисунок 1 – Результат виконання реєстрації

- API для аутентифікації:
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/login/patient
Приклад вхідних даних:
{
    "email": "ivanov@gmail.com",
    "password": "Qwerty123."
}

 
Рисунок 2 – Результат виконання входу


 
Рисунок 3 – Результат створення сесії при вході

MF-2. Підключення та налаштування пристроїв IoT
Для підключення та налаштування IoT пристроїв розроблено цілий ряд функцій управляння (рис. 4).

 
Рисунок 4 – API для управління IoT пристроєм

- /decrementQuantity/:id_inventory – оновлює кількість ліків у вказаному відсіку після їх взяття;
- /inventoryByMedicationAndContainer/:id_medication/:id_container – отримує інформацію про вміст відсіку контейнера за ліками та контейнером;
- /medicationId – отримує ідентифікатор ліків за їх назвою;
- /nearestIntake/:id_patient – отримує найближчий графік прийому ліків для пацієнта;
- -/updateMedicationIntakeStatus/:id_intake_schedule – оновлює статус прийому ліків за вказаним графіком;
- /:id/getPatientId – отримує ідентифікатор пацієнта, закріпленого за вказаним контейнером;
- /:id/updateStatus – оновлює статус роботи контейнера та його підключення до мережі.
MF-3. Додавання медичних препаратів.
Демонстрація додавання мед. препарату (рис. 5):
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/medication/add
Приклад вхідних даних:
{
  "medication_name": "Bibodoctor",
  "medication_type": "Таблетки",
  "description": "Знижує температуру та полегшує біль",
  "quantity": "50",
  "manufacturer": "Фармацевтична компанія №1",
  "expiration_date": "2028-12-31"
}

 
Рисунок 5 – Додавання медичного препарату

MF-4. Реєстрація пацієнта.
Реєстрація пацієнта:
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/register/patient
Приклад вхідних даних:
{
    "email": "ivanov@gmail.com",
    "password": "Qwerty123.",
    "last_name": "Іванов",
    "first_name": "Іван",
    "patronymic": "Іванович",
    "birth_date": "11.11.1987",
    "address": "Харків, вул. Квітуча, 44"
}
 
Рисунок 6 – Результат реєстрації пацієнта

MF-5. Налаштування розкладу прийняття
- Додати призначення
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/main
/patients/1/add-prescription

Приклад вхідних даних:
{
    "diagnosis_name": "Test",
    "prescription_date": "11.11.2003",
    "medications": [
        {
            "medication_id": 2,
            "dosage_duration": "7 days",
            "intake_times": ["08:00", "20:00"]
        },
        {
            "medication_id": 2,
            "dosage_duration": "5 days",
            "intake_times": ["10:00"]
        }
    ]
}


 
Рисунок 7 –Виклик додавання призначення

 
Рисунок 8 – Результат додавання призначення

- Змінити призначення
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/main/patients
/change-prescription/2

 
Рисунок 9 – Результат зміни призначення


- Отримання розкладу прийому
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/main/patients
/prescription-schedule/1

 
Рисунок 10 – Результат отримання розкладу прийому

MF-6. Моніторинг плану лікування.
Маршрут для оновлення статусів прийому ліків:
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/container
/updateMedicationIntakeStatus/4

 
Рисунок 11 – Результат оновлення статусу прийому


MF-7. Надсилання звітів про стан здоров'я.
Звіт про видачу ліків для пацієнта:
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/admin/reports
/medication-distribution/:patientId

 
Рисунок 12 – Звіт з інформацією про пацієнтів

Звіт про залишок ліків на складі:
https://healthy-helper-deploy-4e7d81694293.herokuapp.com/admin
/reports/medication-stock

 
Рисунок 13 – Звіт із залишку медичних препаратів

MF-8. Партнерська інтеграція з аптеками.
На жаль, поки що цей функціонал знаходиться в розробці.

MF-9. Отримання нагадувань.
Сповіщення про малий запас ліків
https://healthy-helper-deploy-4e7d81694293.herokuapp.com
/notification/low-stock
Приклад вхідних даних:
{
    "containerId": 1,
    "medicationId": 2
}

 
Рисунок 14 – Отримання сповіщення про малий запас ліків

Сповіщення про пропуск ліків
https://healthy-helper-deploy-4e7d81694293.herokuapp.com
/notification/missed-doseate
Приклад вхідних даних:
{
    "containerId": 1,
    "medicationId": 2
}

 
Рисунок 15 – Отримання сповіщення про пропуск дози ліків

Висновок
У ході виконання лабораторної роботи була досягнута поставлена мета: розгорнуто програмну систему "HealthyHelper" на платформі Heroku, а також перенесено базу даних у хмарне середовище. Було продемонстровано працездатність програмної системи, перевірено її функціональність на сервері та забезпечено інтеграцію із зовнішньою базою даних. Це дозволило підтвердити коректність роботи додатку в розгорнутому середовищі та його готовність до використання кінцевими користувачами.
